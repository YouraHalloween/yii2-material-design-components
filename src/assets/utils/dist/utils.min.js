(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["app"] = factory();
	else
		root["app"] = root["app"] || {}, root["app"]["utils"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./ajax.js":
/*!*****************!*\
  !*** ./ajax.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ajax": () => (/* binding */ ajax)
/* harmony export */ });
/**
 * 
 * @param {array|JQuery Form} config
 */
function ajax() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _done;

  var _fail;

  var _complete;

  var _ajaxParams;

  init(config);

  function init(config) {
    if (config instanceof jQuery) {
      form(config);
    } else {
      _ajaxParams = config;
    }
  }
  /**
   * Выполнятся в случае успешного выполнения запроса
   * @param {callback} fn
   */


  function done(fn) {
    _done = fn;
    return this;
  }
  /**
   * Выполнятся в случае ошибки в запросе
   * @param {callback} fn 
   */


  function fail(fn) {
    _fail = fn;
    return this;
  }
  /**
   * Выполняется не зависимо от результата
   * @param {callback} fn
   */


  function complete(fn) {
    _complete = fn;
    return this;
  }
  /**
   * Устанавливает параметры для ajax запроса
   * @param {Object} ajaxParams 
   */


  function params(ajaxParams) {
    _ajaxParams = ajaxParams;
    return this;
  }
  /**
   * Отправляет ajax запрос
   * @param {Object} ajaxParams 
   */


  function send(ajaxParams) {
    var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';

    if (ajaxParams) {
      _ajaxParams = ajaxParams;
    }

    _ajaxParams.method = method;

    if (!_ajaxParams.dataType) {
      _ajaxParams.dataType = 'json';
    }

    $.ajax(_ajaxParams).done(function (data) {
      if (_done) {
        _done(data);
      }
    }).fail(function (data) {
      if (_fail) {
        _fail(data);
      } else {
        console.log(data.responseText);
      }
    }).always(function (data) {
      if (_complete) {
        _complete(data);
      }
    });
  }

  function get(ajaxParams) {
    send(ajaxParams, 'GET');
  }

  function post(ajaxParams) {
    send(ajaxParams, 'POST');
  }

  function json() {
    var ajaxParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
    ajaxParams['dataType'] = 'json';
    send(ajaxParams, method);
  }

  function postJson(ajaxParams) {
    json(ajaxParams, 'POST');
  }

  function form(frm) {
    var data = frm.serialize();
    params({
      'url': frm.attr('action'),
      'data': data
    });
    return this;
  }

  return Object.freeze({
    done: done,
    fail: fail,
    complete: complete,
    params: params,
    send: send,
    get: get,
    post: post,
    json: json,
    postJson: postJson,
    form: form
  });
}

;


/***/ }),

/***/ "./form-processing.js":
/*!****************************!*\
  !*** ./form-processing.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormProcessing": () => (/* binding */ FormProcessing)
/* harmony export */ });
/* harmony import */ var _ajax_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax.js */ "./ajax.js");

/**
 * 
 * @param {stirng} id - id формы 
 * @param {string} blockedControls - Имеет три состояни
 *  - submit блокировать только submit
 *  - all блокировать все компоненты формы
 *  
 */

function FormProcessing(id) {
  var blockedControls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    control: 'submit',
    unblock: false
  };

  /**
   * Создание объекта, без использования new
   */
  if (!(this instanceof FormProcessing ? this.constructor : void 0)) {
    return new FormProcessing(id, blockedControls);
  }

  var _eventSuccess;

  var _$form = $("#".concat(id));

  var _blockedControls = blockedControls;

  var _submit = app.controls.item("".concat(id, "-submit"));

  _$form.on('afterValidateAttribute', function (_event, attribute, messages) {
    var control = app.controls.item(attribute.id);

    if (control.helperMessage) {
      var text = messages.length > 0 ? messages[0] : ''; //Первоначально изменить Valid, после чего error=text, выполнит рендер Helper

      control.valid = messages.length == 0;
      control.helperMessage.error = text;
    }
  });

  _$form.on('beforeSubmit', function () {
    _submit.disabled = _blockedControls.control == 'submit';
    var ax = (0,_ajax_js__WEBPACK_IMPORTED_MODULE_0__.ajax)(_$form);

    if (_blockedControls.control == 'all') {
      app.controls.groupEnabled(_$form.attr('id'), false);
    }

    ax.done(function (data) {
      if (data.status === 'success') {
        _eventSuccess(data);
      } else if (data.status === 'model-error') {
        (function () {
          var focusField = false;
          var snackbar = app.controls.item('app-snackbar');

          for (var key in data.message) {
            data.message[key].forEach(function (item) {
              snackbar.add(item);
            });

            if (key.trim() !== '') {
              var control = app.controls.item(key);

              if (!focusField) {
                control.focus();
                focusField = true;
              }

              control.valid = false;
              control.helperMessage.error = data.message[key][0];
            }
          }

          snackbar.showMessage();
        })();
      }
    }).complete(function (data) {
      var unblock = _blockedControls.unblock || !(data.status === 'success');

      if (_blockedControls.control == 'all') {
        app.controls.groupEnabled(_$form.attr('id'), unblock);
      } else {
        _submit.disabled = !unblock;
      }
    }).post();
    return false;
  });
  /**     
   * @param {callback} fn - вызывается в случае успешного выполнения
   */


  FormProcessing.prototype.eventSuccess = function (fn) {
    _eventSuccess = fn;
  };

  Object.defineProperty(FormProcessing.prototype, "id", {
    get: function get() {
      return _$form.attr('id');
    },
    set: function set(value) {
      if (this.id != value) {
        _$form.attr('id', value);
      }
    },
    enumerable: true,
    configurable: true
  });
}



/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!******************!*\
  !*** ./utils.js ***!
  \******************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ajax": () => (/* reexport safe */ _ajax__WEBPACK_IMPORTED_MODULE_0__.ajax),
/* harmony export */   "FormProcessing": () => (/* reexport safe */ _form_processing__WEBPACK_IMPORTED_MODULE_1__.FormProcessing)
/* harmony export */ });
/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ "./ajax.js");
/* harmony import */ var _form_processing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form-processing */ "./form-processing.js");

 // import { DataTableProcessing } from './data-table-processing';


})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});